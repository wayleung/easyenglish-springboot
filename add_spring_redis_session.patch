Index: src/main/java/com/easyenglish/security/AdminSecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/easyenglish/security/AdminSecurityConfig.java	(revision 18d34a297f862421e3a6c395b5ae92a1923e434b)
+++ src/main/java/com/easyenglish/security/AdminSecurityConfig.java	(date 1537885791543)
@@ -2,6 +2,7 @@
 
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.core.annotation.Order;
 import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.config.annotation.web.builders.WebSecurity;
@@ -14,6 +15,7 @@
  */
 @Configuration
 //@EnableWebSecurity
+@Order(2)
 public class AdminSecurityConfig extends WebSecurityConfigurerAdapter {
 
     @Autowired
@@ -29,16 +31,19 @@
 
 
     protected void configure(HttpSecurity http) throws Exception {
-        http.mvcMatcher("/admin/**").formLogin()//  定义当需要用户登录时候，转到的登录页面。
+        http.antMatcher("/admin/**").formLogin()//  定义当需要用户登录时候，转到的登录页面。
                 .loginPage("/admin/login.html")   //// 设置登录页面
-                .loginProcessingUrl("/admin/adminLogin")  // 自定义的登录接口
+//                .loginProcessingUrl("/admin/adminLogin")  // 自定义的登录接口
+                .defaultSuccessUrl("/admin/adminLogin")  // 自定义的登录接口
                 .and()
 
                 .authorizeRequests() // 定义哪些URL需要被保护、哪些不需要被保护
                 .antMatchers("/user/login.html", "/user/authCode/**", "/admin/login.html", "/admin/authCode/**").permitAll()
                 .anyRequest()// 任何请求,登录后可以访问
                 .authenticated()
-                .and()
+                // logout
+                .and().logout().logoutUrl("/admin/adminLogout")
+                .logoutSuccessUrl("/admin/login.html").deleteCookies().and()
                 .csrf().disable()// 关闭csrf防护
 
         ;
Index: src/main/java/com/easyenglish/security/MySecurityConfig.java
===================================================================
--- src/main/java/com/easyenglish/security/MySecurityConfig.java	(revision 18d34a297f862421e3a6c395b5ae92a1923e434b)
+++ src/main/java/com/easyenglish/security/UserSecurityConfig.java	(date 1537886176900)
@@ -19,7 +19,7 @@
 //因为WebSecurityConfigurer只能一个 所以要有顺序 否则报错
 @Order(1)
 //@EnableWebSecurity
-public class MySecurityConfig extends WebSecurityConfigurerAdapter {
+public class UserSecurityConfig extends WebSecurityConfigurerAdapter {
     @Autowired
     private MyUserDetailsService myUserDetailsService;
 
@@ -45,17 +45,24 @@
 //                .and()
 //                .csrf().disable();// 关闭csrf防护
 
-        http.mvcMatcher("/user/**").formLogin()//  定义当需要用户登录时候，转到的登录页面。
+        http.antMatcher("/user/**").formLogin()//  定义当需要用户登录时候，转到的登录页面。
                 .loginPage("/user/login.html")   //// 设置登录页面
                 .loginProcessingUrl("/user/userLogin")  // 自定义的登录接口
+//                .defaultSuccessUrl("/user/userLogin")  // 自定义的登录接口
                 .and()
+
                 .authorizeRequests() // 定义哪些URL需要被保护、哪些不需要被保护
-                .antMatchers("/user/login.html","/user/authCode/**","/admin/login.html","/admin/authCode/**").permitAll()
+                .antMatchers("/user/login.html", "/user/authCode/**", "/admin/login.html", "/admin/authCode/**").permitAll()
                 .anyRequest()// 任何请求,登录后可以访问
                 .authenticated()
-                .and()
-              .csrf().disable()// 关闭csrf防护
+                // logout
+                .and().logout().logoutUrl("/user/userLogout")
+                .logoutSuccessUrl("/user/login.html").deleteCookies().and()
+                .csrf().disable()// 关闭csrf防护
 
+        ;
+
+
 //                .mvcMatcher("/admin/**").formLogin()//  定义当需要用户登录时候，转到的登录页面。
 //                .loginPage("/admin/login.html")   //// 设置登录页面
 //                .loginProcessingUrl("/admin/adminLogin")  // 自定义的登录接口
